[SERVICE]
    Flush 1
    Grace 30
    Parsers_File /fluent-bit/etc/parsers.conf

# ELBヘルスチェックログ除外
[FILTER]
    Name grep
    Match *-firelens-*
    Exclude log ^(?=.*ELB-HealthChecker\/2\.0).*$

[FILTER]
    name                  multiline
    match                 *
    multiline.key_content log
    multiline.parser      java

# ECSからはこんなログが出力されてくる
# logの部分にアプリのログが入ってきて、あとはかってにFirelens/Fluentbitがセットしてそう
# アプリのログはLogbackがjson形式で出力しているが「"」などはbaskslashでescapeされている  
# {    "container_id": "xxxxx-3798276243",    "container_name": "spring-boot-sample-tomcat",    "source": "stdout",    "log": "{\"@timestamp\":\"2023-08-23T07:38:55.618640529Z\",\"@version\":\"1\",\"message\":\"Default Message.\",\"logger_name\":\"nu.mine.kino.web.EchoController\",\"thread_name\":\"http-nio-8080-exec-9\",\"level\":\"INFO\",\"level_value\":20000}",    "ecs_cluster": "xxxcluster",    "ecs_task_arn": "arn:aws:ecs:ap-northeast-1:70604xxx0076932:task/xxxcluster/xxx",    "ecs_task_definition": "spring-boot-taskdefinition:9"}

# log部を抽出して、中のescapeされた文字列をあらためてJSON化
[FILTER]
    Name parser
    Match *-firelens-*
    Key_Name log
    Parser json
    Reserve_Data On 
    Preserve_Key On

    # Preserve_Key On 該当キー(Key_Name)の元データ(=log)も残す
    # Reserve_Data On 他のデータ(key3)も残す
    # OFF/OFF {"key1"=>"v1", "key2"=>"v2"}
    # OFF/ON  {"key1"=>"v1", "key2"=>"v2", "key3"=>"v3"}
    # ON/ON   {"key1"=>"v1", "key2"=>"v2", "key3"=>"v3", "log"=>"{"key1":"v1","key2":"v2"}"}
    # ON/OFF  {"key1"=>"v1", "key2"=>"v2"} ??
    # cf https://docs.fluentbit.io/manual/pipeline/filters/parser

# エラーログにタグ付け
# LogLevelのプロパティが、ERROR なやつだけタグを付け直す(trueにして複製)
[FILTER]
    Name          rewrite_tag
    Match         *-firelens-*
    # Rule          $level (ERROR|WARN) error-$container_id true
    Rule          $level (ERROR) error-$container_id true


# errorタグをCloudWatch Logsへ
[OUTPUT]
    Name cloudwatch_logs
    Match error*
    region ap-northeast-1
    auto_create_group true
    log_group_name ecs-error
    log_stream_prefix ecs_error/
    # log_retention_days 30

[OUTPUT]
    Name cloudwatch_logs
    Match *
    region ap-northeast-1
    auto_create_group true
    log_group_name firelens-container
    log_stream_prefix ecs/
    # log_retention_days 30

# 今のところAWSが勝手に、このストリームは作ってくれてるぽい
# [OUTPUT]
#     Name cloudwatch_logs
#     Match error*
#     region ap-northeast-1
#     auto_create_group true
#     log_group_name firelens-container
#     log_stream_prefix ecs_error/

[OUTPUT]
    Name s3
    Match *
    region ap-northeast-1
    bucket demo-fluent-bit
    total_file_size 1M
    upload_timeout 1m
    use_put_object On